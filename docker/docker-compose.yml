services:
  frontend:
    build: ../frontend
    # image: janjus/carx-frontend:latest
    expose:
      - "4173"
    depends_on:
      - backend
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: ../backend
    # image: janjus/carx-backend:latest
    ports:
      - "5000:5000"
    depends_on:
      - mongo
      - postgres
    restart: unless-stopped
    volumes:
      - uploads_data:/app/uploads
    environment:
      - DATABASE_URL=postgresql://carxuser:carxpass@postgres:5432/carxauth
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/me"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:6
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - app-net
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: carxauth
      POSTGRES_USER: carxuser
      POSTGRES_PASSWORD: carxpass
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U carxuser -d carxauth"]
      interval: 30s
      timeout: 10s
      retries: 5

  proxy:
    build: ../proxy
    # image: janjus/carx-proxy:latest
    ports:
      - "3000:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  model:
    build: ../model
    # image: janjus/carx-model:latest
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/predict"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongo_data:
  pg_data:
  uploads_data:
  mongo_config:

networks:
  app-net:
    driver: bridge
